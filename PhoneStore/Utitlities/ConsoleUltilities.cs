using System;
namespace Ults
{
    static class ConsoleUlts
    {

        public static void ResetColor()
        {
            Console.ForegroundColor = ConsoleColor.White;
        }
        public static void Line()
        {
            Console.WriteLine(@"                                                                                                                                                                            
‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà");
        }
        public static int Login()
        {
            LoginMenuUI();
            Console.OutputEncoding = System.Text.Encoding.UTF8;
            Console.Write(@"üëâ User Name: ");
            string userName = Console.ReadLine()??"";
            Console.Write(@"üëâ Password: ");
            string pwd = Console.ReadLine()??"";
            return 1;
        }
        public static bool PressEnterToContinue()
        {
            Console.Write("Press Enter To Countinue...");
            ConsoleKeyInfo key = Console.ReadKey();
            if (key.Key == ConsoleKey.Enter)
            {
                return true;
            }
            else PressEnterToContinue();
            return true;
        }
        public static void LoginMenuUI()
        {
            string titlePhonestore = @"    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà        
    ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà         ‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà             
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà          
    ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà           ‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà             
    ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ";
            Ults.ConsoleUlts.ResetColor();
            Ults.ConsoleUlts.Line();
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine("\n" + titlePhonestore);
            Ults.ConsoleUlts.ResetColor();
            Ults.ConsoleUlts.Line();
            Console.ForegroundColor = ConsoleColor.Blue;
            string titleLogin = @"                        ‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà‚ñà    ‚ñà‚ñà                                  
                        ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà       ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà                                  
                        ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà                                  
                        ‚ñà‚ñà      ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà                                  
                        ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà";

            Console.WriteLine("\n" + titleLogin);
            Ults.ConsoleUlts.ResetColor();
            Ults.ConsoleUlts.Line();
        }
        // START 
        static Dictionary<int, List<string>> menuTab = new Dictionary<int, List<string>>();
        static List<string> sList = new List<string>();
        static List<string> listPhone = new List<string>() { "iphone x", "xs", "xs max", "ip 11", "ip 12", "ip 13", "ip 14", "ip 15", "ip 16", "ip 17", "ip 18", "ip 19", "ip 20" };
        public static Dictionary<int, List<string>> SellerMenuHandle()
        {
            int phoneQuantity = listPhone.Count(), itemInTab = 4, numberOfTab = 0, count = 1, secondCount = 1, idTab = 0;

            if (phoneQuantity % itemInTab != 0) numberOfTab = (phoneQuantity / itemInTab) + 1; // n·∫øu phoneQuantity chia d∆∞ cho itemInTab th√¨ + th√™m 1, ex: c√≥ 13 phone v√† m·ªói tab hi·ªÉn th·ªã 3 phone th√¨ chia ra ƒë∆∞·ª£c 4.3 v√¨ l√† ki·ªÉu int n√™n s·∫Ω l√† 4 + 1 = 5 
            else numberOfTab = phoneQuantity / itemInTab;

            foreach (string phone in listPhone) // 1. t·∫°o v√≤ng for ƒë·ªÉ add phone v√†o sList v√† s·ª≠ l√≠ logic
            {
                if ((count - 1) == itemInTab) 
                {
                    sList = new List<string>(); // kh·ªüi t·∫°o l·∫°i list m·ªõi khi add ƒë·ª©ng s·ªë l∆∞·ª£ng phone = itemInTab v√†o sList
                    count = 1; // g√°n l·∫°i count = 1 sau khi add ƒë·ª©ng s·ªë l∆∞·ª£ng phone = itemInTab s·ªë l∆∞·ª£ng phone v√†o sList
                }
                sList.Add(phone);
                if (sList.Count() == itemInTab) 
                {
                    idTab++; 
                    menuTab.Add(idTab, sList);  // add idTab v√† sList v√†o menutab (sList ·ªü ƒë√¢y c√≥ s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ = itemInTab)
                }
                else if (sList.Count() < itemInTab && secondCount == phoneQuantity) // second count l√† bi·∫øn ƒë·∫øm s·ªë l·∫ßn ch·∫°y c·ªßa v√≤ng l·∫∑p n·∫øu n√≥ = s·ªë l∆∞·ª£ng ƒëi·ªán tho·∫°i => l·∫ßn cu·ªëi c√πng v√≤ng l·∫∑p ch·∫°y
                {
                    idTab++;
                    menuTab.Add(idTab, sList); // th√™m n·ªët idTab v√† sList c√≤n l·∫°i v√†o menuTab
                }
                secondCount++;
                count++;
            }
            return menuTab;
        }
        // END
        public static void Notification(string message) // th√¥ng b√°o
        {
            Console.WriteLine(message + "!");
            PressEnterToContinue();
            if (message == "Invalid Choice!")
                Console.Clear();
        }
    }
}